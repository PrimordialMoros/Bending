[versions]
math = "2.0.0"
tasker = "1.0.1"
adventure = "4.15.0"
adventure-fabric = "5.11.0"
configurate = "4.1.2"
cloud = "1.8.4"
cloud-snapshot = "1.8.0-SNAPSHOT"
bstats = "3.0.2"
paper = "1.20.4-R0.1-SNAPSHOT"
sponge-api = "11.0.0-SNAPSHOT"
sponge-common = "1.20.1-11.0.0-SNAPSHOT"
minecraft = "1.20.4"
fabric-loom = "1.5.6"
fabric-api = "0.95.1+1.20.4"
fabric-loader = "0.15.6"
shadow = "8.1.1"
flyway = "10.6.0"
junit = "5.10.1"

[libraries]
storage = { module = "me.moros:storage", version = "3.2.0" }

math-core = { module = "me.moros:math-core", version.ref = "math" }

tasker-core = { module = "me.moros:tasker-core", version.ref = "tasker" }
tasker-bukkit = { module = "me.moros:tasker-paper", version.ref = "tasker" }
tasker-sponge = { module = "me.moros:tasker-sponge", version.ref = "tasker" }
tasker-fabric = { module = "me.moros:tasker-fabric", version.ref = "tasker" }

javapoet = { module = "com.squareup:javapoet", version = "1.13.0" }
gson = { module = "com.google.code.gson:gson", version = "2.10.1" }
articdata = { module = "de.articdive:articdata", version = "1.20.1-77b86bc4" }
caffeine = { module = "com.github.ben-manes.caffeine:caffeine", version = "3.1.8" }
guava = { module = "com.google.guava:guava", version = "33.0.0-jre" }
jdbi = { module = "org.jdbi:jdbi3-core", version = "3.43.0" }
hikari = { module = "com.zaxxer:HikariCP", version = "5.1.0" }
flyway-core = { module = "org.flywaydb:flyway-core", version.ref = "flyway" }
flyway-mysql = { module = "org.flywaydb:flyway-mysql", version.ref = "flyway" }
flyway-pgsql = { module = "org.flywaydb:flyway-database-postgresql", version.ref = "flyway" }
flyway-hsqldb = { module = "org.flywaydb:flyway-database-hsqldb", version.ref = "flyway" }
eventbus = { module = "net.kyori:event-api", version = "5.0.0-SNAPSHOT" }

junit-api = { module = "org.junit.jupiter:junit-jupiter-api", version.ref = "junit" }
junit-engine = { module = "org.junit.jupiter:junit-jupiter-engine", version.ref = "junit" }

adventure-api = { module = "net.kyori:adventure-api", version.ref = "adventure" }
adventure-minimessage = { module = "net.kyori:adventure-text-minimessage", version.ref = "adventure" }
adventure-fabric = { module = "net.kyori:adventure-platform-fabric", version.ref = "adventure-fabric" }
adventure-legacy = { module = "net.kyori:adventure-text-serializer-legacy", version.ref = "adventure" }

luckperms-api = { module = "net.luckperms:api", version = "5.4" }
mini-placeholders = { module = "io.github.miniplaceholders:miniplaceholders-api", version = "2.2.3" }

configurate-core = { module = "org.spongepowered:configurate-core", version.ref = "configurate" }
configurate-hocon = { module = "org.spongepowered:configurate-hocon", version.ref = "configurate" }
configurate-gson = { module = "org.spongepowered:configurate-gson", version.ref = "configurate" }

bstats-bukkit = { module = "org.bstats:bstats-bukkit", version.ref = "bstats" }
bstats-sponge = { module = "org.bstats:bstats-sponge", version.ref = "bstats" }

cloud-core = { module = "cloud.commandframework:cloud-core", version.ref = "cloud" }
cloud-minecraft = { module = "cloud.commandframework:cloud-minecraft-extras", version.ref = "cloud" }
cloud-paper = { module = "cloud.commandframework:cloud-paper", version.ref = "cloud" }
cloud-fabric = { module = "cloud.commandframework:cloud-fabric", version.ref = "cloud" }
cloud-sponge = { module = "cloud.commandframework:cloud-sponge", version.ref = "cloud-snapshot" }

# Databases
mysql = { module = "com.mysql:mysql-connector-j", version = "8.3.0" }
mariadb = { module = "org.mariadb.jdbc:mariadb-java-client", version = "3.3.2" }
postgresql = { module = "org.postgresql:postgresql", version = "42.7.1" }
h2 = { module = "com.h2database:h2", version = "2.2.224" }
hsql = { module = "org.hsqldb:hsqldb", version = "2.7.2" }

# Fabric
fabric-minecraft = { module = "com.mojang:minecraft", version.ref = "minecraft" }
fabric-api = { module = "net.fabricmc.fabric-api:fabric-api", version.ref = "fabric-api" }
fabric-loader = { module = "net.fabricmc:fabric-loader", version.ref = "fabric-loader" }
fabric-placeholder = { module = "eu.pb4:placeholder-api", version = "2.3.0+1.20.3" }
sgui = { module = "eu.pb4:sgui", version = "1.4.1+1.20.4" }
fabric-permissions = { module = "me.lucko:fabric-permissions-api", version = "0.2-SNAPSHOT" }

# Bukkit
paper = { module = "io.papermc.paper:paper-api", version.ref = "paper" }
inventory-framework = { module = "com.github.stefvanschie.inventoryframework:IF", version = "0.10.13" }
grief-prevention = { module = "com.github.TechFortress:GriefPrevention", version = "17.0.0" }
towny = { module = "com.palmergames.bukkit.towny:towny", version = "0.100.1.4" }
lwc = { module = "com.griefcraft:lwc", version = "2.3.1" }
worldguard = { module = "com.sk89q.worldguard:worldguard-bukkit", version = "7.0.9" }
papi = { module = "me.clip:placeholderapi", version = "2.11.5" }

# Sponge
sponge-api = { module = "org.spongepowered:spongeapi", version.ref = "sponge-api" }
sponge-common = { module = "org.spongepowered:sponge", version.ref = "sponge-common" }
sponge-mixin = { module = "org.spongepowered:mixin", version = "0.8.5" }

# Plugins for build-logic
shadow = { module = "com.github.johnrengelman:shadow", version.ref = "shadow" }
vanilla = { module = "org.spongepowered:vanillagradle", version = "0.2.1-SNAPSHOT" }
minotaur = { module = "com.modrinth.minotaur:Minotaur", version = "2.8.7" }
checker = { module = "org.checkerframework:checkerframework-gradle-plugin", version = "0.6.37" }

[bundles]
cloud = ["cloud-core", "cloud-minecraft"]
configurate = ["configurate-core", "configurate-hocon", "configurate-gson"]
drivers-local = ["h2", "hsql"]
drivers-remote = ["mysql", "mariadb", "postgresql"]
drivers-nonstandard = ["mariadb", "postgresql", "h2", "hsql"]
flyway = ["flyway-core", "flyway-mysql", "flyway-pgsql", "flyway-hsqldb"]
junit = ["junit-api", "junit-engine"]

[plugins]
jmh = { id = "me.champeau.jmh", version = "0.7.2" }
fabric-loom = { id = "fabric-loom", version.ref = "fabric-loom" }
userdev = { id = "io.papermc.paperweight.userdev", version = "1.5.11" }
sponge = { id = "org.spongepowered.gradle.plugin", version = "2.2.0" }
hangar = { id = "io.papermc.hangar-publish-plugin", version = "0.1.1" }
run-paper = { id = "xyz.jpenilla.run-paper", version = "2.2.2" }
